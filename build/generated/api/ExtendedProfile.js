"use strict";
/**
 * Do not edit this file it is auto-generated by italia-utils / gen-api-models.
 * See https://github.com/teamdigitale/italia-utils
 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
const EmailAddress_1 = require("./EmailAddress");
const types_1 = require("italia-ts-commons/lib/types");
const t = require("io-ts");
/**
 * Describes the citizen's profile, mostly interesting for preferences
 * attributes.
 */
/**
 * All the notification channels blocked by the user.
 * Each channel is related to a specific service (sender).
 */
// additional attributes
exports.ExtendedProfileBlocked_inbox_or_channels = t.dictionary(t.string, t.readonlyArray(t.string, "array of string"), "ExtendedProfileBlocked_inbox_or_channels");
// required attributes
const ExtendedProfileR = t.interface({
    is_inbox_enabled: types_1.withDefault(t.boolean, false),
    is_webhook_enabled: types_1.withDefault(t.boolean, false),
    version: t.Integer
});
// optional attributes
const ExtendedProfileO = t.partial({
    email: EmailAddress_1.EmailAddress,
    blocked_inbox_or_channels: exports.ExtendedProfileBlocked_inbox_or_channels,
    preferred_languages: t.readonlyArray(t.string, "array of string"),
    accepted_tos_version: t.number,
    is_email_enabled: types_1.withDefault(t.boolean, true)
});
exports.ExtendedProfile = t.intersection([ExtendedProfileR, ExtendedProfileO], "ExtendedProfile");
//# sourceMappingURL=ExtendedProfile.js.map